my_matrix2 <- (data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- (1:20, nrow = 4, ncol = 5)
my_matrix2 <- (c(1:20), nrow = 4, ncol = 5)
my_matrix2 <- (c(1:20) nrow = 4, ncol = 5)
my_matrix2 <- (1:20 nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
colnames(my_data)
colnames(my_data) <- cnames
my_data
play()
my_data$age
View(my_data)
my_data$Bill
my_data$,Bill
my_data$Bill,
my_data,$Bill
my_data$rating
nxt()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 !=7
5 != 7
5 !== 7
!5 == 7
FALSE & FALSE
TRUE & C(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 < 4)
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evalutes(function(x){x+1}, 6)
evalute(function(x){x+1}, 6)
evaluate(function(x){x+1}, 6)
evalvuate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("SUP BITCHES")
submit
submit()
submit()
submit()
submit()
mad_libs("fart", "butt", "face")
submit()
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags[,], unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
0
quit()
Rprof()
x <- 3
Rprof(NULL)
summaryRprof()
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
plot(x, y)
e
plot(x, e)
plot(x, e, y)
plot.xy(x, e, y)
plot(e, y)
plot(y,e)
?rbinom
x <- 1:6
length(x)
y <- as.character(x)
y
length(y)
t <- "hello world this is test"
length(t)
x <- list("hello", 69, TRUE, "world")
x
length(x)
lenth(x$1)
lenth(x[1])
length(x[1])
length(x$1)
length(x$69)
length(x[1])
x[1]
x[[1]]
x[[[1]]]
x <- 1:3
y <- 10:12
t <- cbind(x, y)
t
t$x
t[1]
t[1,]
t[,1]
t[,x]
t[,'x']
t2 <- data.frame(t)
t2
t2$x
t2$y
t2$y < 12
t2$y < 1
x <- [1,2,3,4,5,6,7]
x <- c[1,2,3,4,5,6,7]
x <- c(1,2,3,4,5,6,7)
y <- x[2]
class(y)
class(x)
y <- x[[2][]
y <- x[[2]]
class(y)
x <- list("foo"=1:4, "bar"=0.6)
x
x$bar
x["bar"]
x <- list(foo=1:4, bar=0.6)
x
x$foo
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/meanvector.R')
x  <- c(1, 2, 3)
x
type(x)
class(x)
makeVector(x)
makeVector(5, 3, 2)
makeVector([5, 3, 2])
makeVector(c(5, 3, 2))
makeVector(c(5, 3, 2))
makeVector(x
)
x = numeric()
makeVector(x = numeric(5, 2))
makeVector(x = numeric(5))
makeVector(x = numeric())
cachmean(x)
x <- c(1, 3, 5)
chacemean(x)
cachemean(x)
cachemean(x, 3)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/meanvector.R')
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/meanvector.R')
cachemean(x, 3)
class(x)
a <- makeVector(18:45)
a
a <- makeVector(18:45)
cachemean(a)
x <- makeVector(18:45)
x$get()
x$getmean()
cachemean(x)
x$getmean()
cachemean(x)
B = matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2)
class(B)
B <- matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) )
cacheSolve(a)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7), nrow=3, ncol=2) )
cacheSolve(a)
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
cacheSolve(a)
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
cacheSolve(a)
matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3)
)
b <- matrix(c(2, 4, 3, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3)
cacheSolve(a)
solve(b)
a <- makeCacheMatrix(matrix(c(12, 4, 23, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
cacheSolve(a)
solve(matrix(c(12, 4, 23, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3) )
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/Coursera/R Programming/ProgrammingAssignment2/cachematrix.R')
a$getinv
a$getinv()
a$setin(0)
cacheSolve(a)
a$setinv(NULL)
cacheSolve(a)
# just getting some data
library(ggplot2)
data(diamonds)
# basic plotting
plot(diamonds$carat, diamonds$price, col = diamonds$color,
pch = as.numeric(diamonds$cut))
install.packages("ggplot2")
# just getting some data
library(ggplot2)
data(diamonds)
# basic plotting
plot(diamonds$carat, diamonds$price, col = diamonds$color,
pch = as.numeric(diamonds$cut))
ggplot(diamonds, aes(carat, price, col = color, shape = cut)) +
geom_point()
ggplot(diamonds, aes(carat, price, col = D, shape = ideal)) +
geom_point()
View(diamonds)
ggplot(diamonds, aes(carat, price, col = "D", shape = "Ideal")) +
geom_point()
data(cars)
dataset(cars)
data(cars)
head(cars)
ggplot(cars)
?ggplot
ggplot()
View(cars)
ggplot(cars$speed, cars$dist)
ggplot(cars, aes(speed, dist))
ggplot(cars, aes(speed, dist)) + geom_line()
ggplot(cars, aes(speed, dist)) + geom()
ggplot(cars, aes(speed, dist)) + geom_point()
data(mtcars)
View(cars)
data(mtcars)
data(mtcars)
names(mtcars)
View(mtcars)
ggplot(mtcars, aes(mpg, cyl)) + geom_point()
ggplot(mtcars, aes(cyl, mpg)) + geom_point()
ggplot(mtcars, aes(cyl, mpg), col = hp) + geom_point()
ggplot(mtcars, aes(cyl, mpg, hp)) + geom_point()
data(diamonds)
View(diamonds)
help(diamonds)
data(mtcars)
View(mtcars)
ggplot(mtcars, aes(x = cyl, y = mpg, color = hp)) + geom_point()
ggplot(mtcars, aes(x = cyl, y = mpg, color = hp)) + geom_line()
ggplot(mtcars, aes(x = cyl, y = mpg, color = hp)) + geom_point()
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point()
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + geom_smooth()
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + facet_grid(drat ~ wt)
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + facet_grid(hp)
ggplot(mtcars, aes(x = cyl, y = mpg, size = hp)) + geom_point() + facet_grid(disp ~ hp)
setwd("~/Documents/Data_Projs/NYC-311")
df <- read.csv('reduced_2014.csv')
df <- read.csv('parties_2014.csv')
df.show()
View(df)
View(df)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
gg <- ggplot(data=df, aes(x='Hour', color='Weekday')) + geom_histogram(origin=0.5)
gg
gg <- ggplot(data=df, aes(x=Hour, color=Weekday)) + geom_histogram(origin=0.5)
gg
gg <- ggplot(data=df, aes(x=Hour, color=Weekday)) + geom_histogram(origin=0.5, binwidth=1)
gg
df.Hour
df['Hour']
df['Hour'] <- df['Hour'] + 1;
gg <- ggplot(data=df, aes(x=Hour, color=Weekday)) + geom_histogram(origin=0.5, binwidth=1)
gg
df['Weekday'] <- df['Weekday'] + 1;
gg <- ggplot(data=df, aes(x=Hour, color=Weekday)) + geom_histogram(origin=0.5, binwidth=1)
gg
View(df)
df <- read.csv('parties_2014.csv')
View(df)
df1 <- df[c('Wekday','Hour')]
df1 <- df['Wekday','Hour']
df1 <- df[('Wekday','Hour')]
df1 <- df[['Wekday','Hour']]
df1 <- df[c('Wekday','Hour')]
df1 <- df[c(Wekday,Hour)]
df1 <- df[c(Weekday,Hour)]
df1 <- df[c('Weekday','Hour')]
View(df1)
p <- ggplot(df1, aes(Weekday)) + geom_hist()
p <- ggplot(df1, aes(Weekday)) + geom_histogram()
p
p <- ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1)
p
p <- ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1, origin=0.5)
p
ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1, origin=0.5) + continuous_scale()
ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous()
ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous(limits=c(1:6))
1:6
0:6
ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous(limits=c(0:6))
ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous(breaks=c(0:6))
ggplot(df1, aes(Weekday)) + geom_density(binwidth=1, origin=0.5) + scale_x_continuous(breaks=c(0:6))
ggplot(df1, aes(Weekday)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous(breaks=c(0:6))
ggplot(df1, aes(x=Weekday)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous(breaks=c(0:6))
ggplot(df1, aes(x=Hour)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous(breaks=c(0:6))
ggplot(df1, aes(x=Hour)) + geom_histogram(binwidth=1, origin=0.5) + scale_x_continuous(breaks=c(0:23))
ggplot(df1, aes(x=Hour)) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=c(0:23))
ggplot(df1, aes(x=Hour, color=Weekday)) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=c(0:23))
ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=c(0:23))
ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + geom_density(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=c(0:23))
ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=c(0:23:2))
0:2:10
(0:10, by=2)
c(0:10, by=2)
ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=c(0:23, by=2))
ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=seq(0:23, by=2))
ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=seq(0,23, by=2))
gg <- ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + \geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=seq(0,23, by=2))
gg <- ggplot(df1, aes(x=Hour, color=as.factor(Weekday))) + geom_histogram(binwidth=1, origin=-0.5, fill=as.factor(Weekday)) + scale_x_continuous(breaks=seq(0,23, by=2))
gg <- ggplot(df1, aes(x=Hour, color=as.factor(Weekday), fill=as.factor(Weekday))) + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=seq(0,23, by=2))
gg
gg <- ggplot(df1, aes(x=Hour, color=as.factor(Weekday), fill=as.factor(Weekday)))
p <- gg + geom_histogram(binwidth=1, origin=-0.5) + scale_x_continuous(breaks=seq(0,23,by=2))
p
p <- gg + geom_histogram(binwidth=1, origin=-0.5, alpha=0.5) + scale_x_continuous(breaks=seq(0,23,by=2))
p
p <- gg + geom_histogram(binwidth=1, origin=-0.5, alpha=0.85) + scale_x_continuous(breaks=seq(0,23,by=2))
p
show(df1)
View(df1)
df1$Weekday
df1$Day = weekdays(df1$Weekday)
df1 <- df('Created Date')
df1 <- df('Created.Date')
View(df1)
View(df1)
View(df1)
df1 <- df$Created.Date
View(df)
df1 <- df[,"Created.Date"]
df1 <- df[,("Created.Date")]
df1 <- df[,c(1)]
df1
df1 <- df[,c(1)]
df1 <- df[,c(1,6,7)]
View(df1)
df1$Day <- weekdays(df1$Created.Date)
df1[[1]] <- as.Date(df1[[1]])
df1 <- df[,c(1,6,7)]
df1[[1]] <- as.Datetime(df1[[1]])
df1$Weekday <- strptime(df1[[1]], "%m/%d/%y %H:%M:%S")
df1$Weekday <- format(df1[[1]])
df1[[1]] <- format(df1[[1]])
df1 <- subset(df1, select = -c('Weekday'))
df1 <- subset(df1, select = -c(['Weekday']))
df1 <- subset(df1, select = -c(4))
df1$Weekday
df1$Weekday <- 1
df1$Weekday <- format(df1$Created.Date, %A)
df1$Weekday <- format(df1$Created.Date, format=%A)
df1$Weekday <- format(df1[[1]], format=%A)
df1$Weekday <- weekdays(df1[[1]])
weekdays(as.Date(df1$Created.Date,'%d-%m-%Y %H:%M%s'))
weekdays(as.Date(df1$Created.Date,'%d-%m-%Y %H:%M:%s'))
df1$Weekday <- weekdays(as.Date(df1$Created.Date))
df1$Hour <- format(df1$Created.Date, "%H")
df1$Hour <- 1
df1$Hour <- format(as.Date(df1$Created.Date), "%H")
df1$Hour <- format(as.Date(df1$Created.Date), format="%H")
df1$Hour <- format(as.Date(df1$Created.Date), format="%h")
df1$Hour <- format(as.Date(df1$Created.Date), format="%H:%M")
df1$Hour <- format(df1$Created.Date, format="%H:%M")
df1$Hour <- format(df1$Created.Date, format="%H")
df1$Hour <- strptime(df1$Created.Date, format="%H")
x <- '2014-12-31 23:59:12'
x[12:12]
x[12:13]
x(12:13)
x[c(12:13)]
strsplit(x, "")[[1]]
strsplit(x, "")[[12:13]]
strsplit(x, "")[[1]][12:13]
paste(strsplit(x, "")[[1]][12:13])
paste(strsplit(x, "")[[1]][12], strsplit(x, "")[[1]][13])
paste(strsplit(x, "")[[1]][12], strsplit(x, "")[[1]][13], sep='')
df1$Hour = paste(strsplit(df1$Created.Date, "")[[1]][12], strsplit(df1$Created.Date, "")[[1]][13], sep='')
df1$Hour = 1
df1$Hour <- strptime(df1$Created.Date,"%Y-%m-%d %H:%M:%S")
df1$Hour <- format(strptime(df1$Created.Date,"%Y-%m-%d %H:%M:%S"), "%H")
gg <- ggplot(data=df1, aes(x=Hour, color=Weekday, fill=Weekday)) + geom_histogram()
gg
gg <- ggplot(data=df1, aes(x=Hour, color=Weekday, fill=Weekday))
p <- gg + geom_histogram(alpha=0.85)
p
p <- gg + geom_histogram(alpha=0.85) + scale_colour_manual(values=c("Mon", "Tues", "Wed", "Thurs", "Fri", "Sat", "Sun"))
p
p <- gg + geom_histogram(alpha=0.85) + scale_colour_manual(values=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
p
p <- gg + geom_histogram(alpha=0.85)
p
p <- gg + geom_histogram(alpha=0.85) + scale_colour_manual(breaks=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
p
p <- gg + geom_histogram(alpha=0.85)
p
levels(df1$Weekday)
p <- gg + geom_histogram(alpha=0.85) + guide_legend(order=1)
p <- gg + geom_histogram(alpha=0.85) + guide_legend(order=12)
p <- gg + geom_histogram(alpha=0.85) + guide_legend()
p <- gg + geom_histogram(alpha=0.85)
levels(df1$Weekday)
levels(df1$Weekday[1])
levels(df1)
p <- gg + geom_bar(alpha=0.85)
p
df11$tmp <- factor(df1$Weekday,
levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered=TRUE)
df1$tmp <- factor(df1$Weekday,
levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
ordered=TRUE)
gg <- ggplot(data=df1, aes(x=Hour, color=tmp, fill=tmp))
gg + geom_bar()
gg + geom_bar(alpha=0.85)
gg + geom_density
gg + geom_density()
ggplot(data=df1, aes(x=Hour, color=tmp)) + geom_density()
ggplot(data=df1, aes(x=Hour)) + geom_density()
ggplot(data=df1, aes(x=Weekday)) + geom_density()
ggplot(data=df1, aes(x=Weekday)) + geom_line()
ggplot(data=df1, aes(x=Weekday)) + geom_point()
ggplot(data=df1, aes(x=Weekday, y=Hour)) + geom_point()
ggplot(data=df1, aes(Weekday)) + geom_density()
ggplot(data=df1, aes(Hour)) + geom_density()
ggplot(data=df1, aes(Hour)) + geom_histogram()
ggplot(data=df1, aes(Weekday)) + geom_histogram()
ggplot(data=df1, aes(tmp)) + geom_histogram()
level(df1$tmp)
levels(df1$tmp)
ggplot(data=df1, aes(tmp)) + geom_histogram()
ggplot(data=df1, aes(Hour)) + geom_histogram()
ggplot(data=df1, aes(Hour, color=tmp)) + geom_histogram()
ggplot(data=df1, aes(Hour, color=tmp)) + geom_histogram(fill=tmp)
ggplot(data=df1, aes(Hour, fill=tmp)) + geom_histogram()
ggplot(data=df1, aes(Hour, fill=tmp)) + geom_density2d()
ggplot(data=df1, aes(Hour, fill=tmp)) + geom_density()
ggplot(data=df1, aes(Hour, fill=tmp)) + geom_histogram(aes(y = ..density..))
ggplot(data=df1, aes(Hour, fill=tmp)) + geom_freqpoly()
ggplot(data=df1, aes(Hour, fill=tmp)) + geom_density()
ggplot(data=df1, aes(Hour, color=tmp)) + geom_density()
ggplot(data=df1, aes(tmp, color=Hour)) + geom_density()
ggplot(data=df1, aes(Hour, color=Weekday)) + geom_density()
df1$Weekday = weekdays(df1$Weekday)
as.POSIXlt(df$Weekday)$wday
as.POSIXlt(df$Created.Date)$wday
df1$Weekday <- as.POSIXlt(df$Created.Date)$wday
ggplot(data=df1, aes(Hour, color=Weekday)) + geom_density()
ggplot(data=df1, aes(Hour, color=as.factor(Weekday))) + geom_density()
